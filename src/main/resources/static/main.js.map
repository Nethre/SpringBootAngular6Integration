{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base-view/base-view.component.css","webpack:///./src/app/base-view/base-view.component.html","webpack:///./src/app/base-view/base-view.component.ts","webpack:///./src/app/constants.ts","webpack:///./src/app/display-data-dialog/display-data-dialog.component.css","webpack:///./src/app/display-data-dialog/display-data-dialog.component.html","webpack:///./src/app/display-data-dialog/display-data-dialog.component.ts","webpack:///./src/app/employee-detail/employee-detail.component.css","webpack:///./src/app/employee-detail/employee-detail.component.html","webpack:///./src/app/employee-detail/employee-detail.component.ts","webpack:///./src/app/generic-dialog/generic-dialog.component.css","webpack:///./src/app/generic-dialog/generic-dialog.component.html","webpack:///./src/app/generic-dialog/generic-dialog.component.ts","webpack:///./src/app/manager-dashboard/manager-dashboard.component.css","webpack:///./src/app/manager-dashboard/manager-dashboard.component.html","webpack:///./src/app/manager-dashboard/manager-dashboard.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/request-dialog/request-dialog.component.css","webpack:///./src/app/request-dialog/request-dialog.component.html","webpack:///./src/app/request-dialog/request-dialog.component.ts","webpack:///./src/app/request/request.component.css","webpack:///./src/app/request/request.component.html","webpack:///./src/app/request/request.component.ts","webpack:///./src/app/services/request.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\r\nimport { BaseViewComponent } from './base-view/base-view.component';\r\nimport { RequestComponent } from './request/request.component';\r\nimport { ManagerDashboardComponent } from './manager-dashboard/manager-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',redirectTo:'dashboard',pathMatch:'full'},\r\n  {path:'empdetails',component:EmployeeDetailComponent},\r\n  {path:'dashboard',component:BaseViewComponent,\r\n  children:[\r\n    {path:'',redirectTo:'mgrdashboard',pathMatch:'full'},\r\n    {path:'mgrdashboard',component:ManagerDashboardComponent},    \r\n    {path:'request', component:RequestComponent},\r\n  ]\r\n  },\r\n  {path:'**',component:BaseViewComponent}\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'web-app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\r\nimport { BaseViewComponent } from './base-view/base-view.component';\r\nimport { RequestComponent } from './request/request.component';\r\nimport { ManagerDashboardComponent } from './manager-dashboard/manager-dashboard.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { MaterialModules } from './material';\r\nimport { HttpClientModule }    from '@angular/common/http';\r\n\r\nimport 'hammerjs';\r\nimport { GenericDialogComponent } from './generic-dialog/generic-dialog.component';\r\nimport { DisplayDataDialogComponent } from './display-data-dialog/display-data-dialog.component';\r\nimport { RequestDialogComponent } from './request-dialog/request-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeeDetailComponent,\r\n    BaseViewComponent,\r\n    RequestComponent,\r\n    ManagerDashboardComponent,\r\n    GenericDialogComponent,\r\n    DisplayDataDialogComponent,\r\n    RequestDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModules,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  entryComponents:[GenericDialogComponent,DisplayDataDialogComponent,RequestDialogComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  base-view works!\\r\\n</p>\\r\\n<app-employee-detail></app-employee-detail>\\r\\n<mat-divider></mat-divider>\\r\\n<nav mat-tab-nav-bar>\\r\\n  <a mat-tab-link\\r\\n     *ngFor=\\\"let link of navLinks\\\"\\r\\n     [routerLink]=\\\"link.path\\\"\\r\\n     routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n     [active]=\\\"rla.isActive\\\">\\r\\n    {{link.label}}\\r\\n  </a>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-base-view',\r\n  templateUrl: './base-view.component.html',\r\n  styleUrls: ['./base-view.component.css']\r\n})\r\nexport class BaseViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  navLinks=[{path:'./mgrdashboard',label:'Manager Dashboard'},\r\n            {path:'./request',label:'Request'}];\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export const requestStatusMap : Map<string,string> = new Map<string, string>();\r\nrequestStatusMap.set('OPEN','OPEN');\r\nrequestStatusMap.set('PENDING','PENDING');\r\nrequestStatusMap.set('APPROVED','APPROVED');\r\nrequestStatusMap.set('REJECTED','REJECTED');\r\nrequestStatusMap.set('INACTIVATED','INACTIVATED');\r\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Request Description</h1>\\r\\n<div mat-dialog-content>\\r\\n  {{data.value}}\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">  \\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">OK</button>\\r\\n</div>\"","import { Component, OnInit, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material';\r\n@Component({\r\n  selector: 'app-display-data-dialog',\r\n  templateUrl: './display-data-dialog.component.html',\r\n  styleUrls: ['./display-data-dialog.component.css']\r\n})\r\nexport class DisplayDataDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  employee-detail works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-detail',\r\n  templateUrl: './employee-detail.component.html',\r\n  styleUrls: ['./employee-detail.component.css']\r\n})\r\nexport class EmployeeDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n    max-width: 100%;\\r\\n    max-height: 100%;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 0;\\r\\n}\"","module.exports = \"<h2 mat-dialog-title>Discussion Comment</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Please enter here...\\\" maxlength=\\\"500\\\" [formControl]=\\\"comment\\\" required></textarea>\\r\\n    <mat-error *ngIf=\\\"comment.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n  </mat-form-field>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions  align=\\\"end\\\">\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Cancel</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" [disabled]=\\\"comment.invalid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n</mat-dialog-actions>\"","import { Component, OnInit,Inject,EventEmitter,Output } from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-generic-dialog',\r\n  templateUrl: './generic-dialog.component.html',\r\n  styleUrls: ['./generic-dialog.component.css']\r\n})\r\nexport class GenericDialogComponent implements OnInit {\r\n\r\n  @Output('onAdd')\r\n  onAdd = new EventEmitter<any>();\r\n  constructor(public dialogRef : MatDialogRef<GenericDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  comment = new FormControl('', [Validators.required]);\r\n\r\n  getErrorMessage() {\r\n    return this.comment.hasError('required') ? 'You must enter a value':'';\r\n  }\r\n\r\n  // onClose(): void {\r\n  //   this.dialogRef.close('done');\r\n  // }\r\n\r\n  onSubmit():void{\r\n    this.dialogRef.close('true');\r\n    this.onAdd.emit(this.comment.value);\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.manager-icons{\\r\\n  padding: 0px 14px;\\r\\n  white-space: nowrap;\\r\\n}\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Request Description Column -->\\r\\n    <ng-container matColumnDef=\\\"reqDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"><button mat-button color=\\\"primary\\\" (click)=\\\"viewReqDescription(row)\\\"> {{row.requestDescription | slice:0:25}} </button></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Raised By Column -->\\r\\n    <ng-container matColumnDef=\\\"empId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Raised By </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.employee.firstName}} {{row.employee.lastName}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Staus Column -->\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Staus </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.requestStatus}} </td>\\r\\n    </ng-container>\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"manager-icons\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"onAccept(row)\\\" [disabled]=\\\"!(row.requestStatus==requestStatusMap.get('OPEN') || row.requestStatus==requestStatusMap.get('PENDING'))\\\">\\r\\n          <mat-icon >thumb_up_alt</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"onReject(row)\\\" [disabled]=\\\"!(row.requestStatus==requestStatusMap.get('OPEN') || row.requestStatus==requestStatusMap.get('PENDING'))\\\">\\r\\n          <mat-icon >thumb_down_alt</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"onMeet(row)\\\" [disabled]=\\\"!(row.requestStatus==requestStatusMap.get('OPEN'))\\\">\\r\\n          <mat-icon >people</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {MatDialog} from '@angular/material';\r\n\r\nimport{GenericDialogComponent} from '../generic-dialog/generic-dialog.component';\r\nimport{DisplayDataDialogComponent} from '../display-data-dialog/display-data-dialog.component';\r\n\r\nimport { RequestService } from '../services/request.service';\r\nimport { RequestData } from '../models/request-data';\r\nimport { requestStatusMap } from '../constants';\r\n@Component({\r\n  selector: 'app-manager-dashboard',\r\n  templateUrl: './manager-dashboard.component.html',\r\n  styleUrls: ['./manager-dashboard.component.css']\r\n})\r\nexport class ManagerDashboardComponent implements OnInit {\r\n  reqData : RequestData[];\r\n  comment:string;\r\n  displayedColumns: string[] = ['id', 'reqDesc', 'empId', 'status','action'];\r\n  dataSource: MatTableDataSource<RequestData>;\r\n  requestStatusMap=requestStatusMap;\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public dialog: MatDialog, public requestService: RequestService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.requestService.getRequests(1001).subscribe(result=> {\r\n      this.reqData=result\r\n      console.log(this.reqData);\r\n    // Assign the data to the data source for the table to render\r\n      this.dataSource = new MatTableDataSource(this.reqData);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n    \r\n    \r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  onSubmit(request:RequestData,action:string){\r\n    const dialogRef = this.dialog.open(GenericDialogComponent,{\r\n      height: '250px',\r\n      width: '600px',\r\n    });\r\n    dialogRef.componentInstance.onAdd.subscribe((data) => {\r\n        this.comment = data;\r\n      });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n        dialogRef.componentInstance.onAdd.unsubscribe(); \r\n        if(result){\r\n        console.log(this.comment);\r\n        request.requestStatus=action;\r\n        }\r\n    });\r\n  }\r\n\r\n  onAccept(request:RequestData){\r\n    this.onSubmit(request,requestStatusMap.get('APPROVED'));\r\n  }\r\n\r\n  onReject(request:RequestData){\r\n    this.onSubmit(request,requestStatusMap.get('REJECTED'));\r\n  }\r\n\r\n  onMeet(request:RequestData){\r\n    this.onSubmit(request,requestStatusMap.get('PENDING'));\r\n  }\r\n\r\n  viewReqDescription(row:RequestData){\r\n    const dialogRef = this.dialog.open(DisplayDataDialogComponent,{\r\n      data:{value:row.requestDescription}\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport{MatDividerModule,MatTableModule,MatFormFieldModule,MatIconModule,MatDialogModule,\r\n    MatSortModule,MatPaginatorModule,MatSelectModule,MatOptionModule,MatTooltipModule,\r\n    MatButtonModule,MatInputModule,MatTabsModule } from '@angular/material';\r\n  import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n  @NgModule({\r\n    imports: [\r\n      BrowserAnimationsModule,\r\n      MatDividerModule,\r\n      MatTableModule,\r\n      MatFormFieldModule,\r\n      MatSortModule,\r\n      MatPaginatorModule,\r\n      MatSelectModule,\r\n      MatOptionModule,\r\n      MatTooltipModule,\r\n      MatButtonModule,\r\n      MatIconModule,\r\n      MatDialogModule,\r\n      MatInputModule,\r\n      MatTabsModule\r\n    ],\r\n    exports:[BrowserAnimationsModule,\r\n        MatDividerModule,\r\n        MatTableModule,\r\n        MatFormFieldModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatTooltipModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatInputModule,\r\n        MatTabsModule\r\n      ]\r\n  })\r\nexport class MaterialModules{\r\n\r\n}","module.exports = \"mat-form-field {\\r\\n    max-width: 100%;\\r\\n    max-height: 100%;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 0;\\r\\n}\"","module.exports = \"<h2 mat-dialog-title>Add Request</h2>\\n\\n<mat-dialog-content [formGroup]=\\\"form\\\">\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Please enter here...\\\" maxlength=\\\"500\\\" [formControl]=\\\"comment\\\" required></textarea>\\n    <mat-error *ngIf=\\\"comment.invalid\\\">{{getErrorMessage()}}</mat-error>\\n  </mat-form-field>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions  align=\\\"end\\\">\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Cancel</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" [disabled]=\\\"comment.invalid\\\" (click)=\\\"onSubmit()\\\">Add</button>\\n</mat-dialog-actions>\"","import { Component, OnInit,Inject,EventEmitter,Output } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\nimport {FormControl, Validators, FormBuilder, FormGroup} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-request-dialog',\n  templateUrl: './request-dialog.component.html',\n  styleUrls: ['./request-dialog.component.css']\n})\nexport class RequestDialogComponent implements OnInit {\n\n  form: FormGroup;\n  request:string;\n  @Output('onAdd')\n  onAdd = new EventEmitter<any>();\n  constructor(\n    private dialogRef : MatDialogRef<RequestDialogComponent>,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      \n    });\n  }\n\n  comment = new FormControl('', [Validators.required]);\n  \n\n  getErrorMessage() {\n    return this.comment.hasError('required') ? 'You must enter a value':'';\n  }\n\n  onSubmit():void{\n    this.dialogRef.close('true');\n    this.onAdd.emit(this.comment.value);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n<button mat-fab color=\\\"primary\\\" (click)=\\\"onAddRequest()\\\">\\r\\n    <mat-icon >add</mat-icon>\\r\\n </button>\\r\\n  \\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n  \\r\\n\\r\\n    <!-- Request Description Column -->\\r\\n    <ng-container matColumnDef=\\\"reqDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"><button mat-button color=\\\"primary\\\" (click)=\\\"viewReqDescription(row)\\\"> {{row.reqDesc | slice:0:25}} </button></td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n    <!-- Status Column -->\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </td>\\r\\n    </ng-container>\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"manager-icons\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"onCancel(row)\\\" [disabled]=\\\"!(row.status==='open' || row.status==='pending')\\\">\\r\\n          <mat-icon >cancel</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  \\r\\n  \\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material';\r\n\r\nimport {GenericDialogComponent} from '../generic-dialog/generic-dialog.component';\r\nimport {DisplayDataDialogComponent} from '../display-data-dialog/display-data-dialog.component';\r\nimport { RequestDialogComponent } from '../request-dialog/request-dialog.component';\r\n\r\n\r\nexport interface RequestData {\r\n  reqDesc: string;\r\n  status: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-request',\r\n  templateUrl: './request.component.html',\r\n  styleUrls: ['./request.component.css']\r\n})\r\nexport class RequestComponent implements OnInit {\r\n\r\n  comment: string;\r\n  displayedColumns: string[] = ['reqDesc', 'status', 'action'];\r\n  dataSource: MatTableDataSource<RequestData>;\r\n\r\n  /** Constants used to fill up our data base. */\r\n reqData: RequestData[];\r\n\r\n  testinglog: string;\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    // Create 100 users\r\n    this.reqData = [\r\n              {reqDesc: 'Seat change request', status: 'open'},\r\n              {reqDesc: 'PC not working.', status: 'inactivated'},\r\n              {reqDesc: 'Project discussion.', status: 'inactivated'}\r\n    ];\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(this.reqData);\r\n//    this.dataSource = this.reqData;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  onSubmit(request: RequestData, action: string) {\r\n    const dialogRef = this.dialog.open(GenericDialogComponent, {\r\n      height: '250px',\r\n      width: '600px',\r\n    });\r\n    this.testinglog = \"1\";\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n        dialogRef.componentInstance.onAdd.unsubscribe();\r\n        this.testinglog = result;\r\n        if (result) {\r\n        this.testinglog = result;\r\n        request.status = action;\r\n        }\r\n    });\r\n  }\r\n\r\n  onCancel(request: RequestData) {\r\n    this.onSubmit(request, \"inactivated\");\r\n  }\r\n\r\n  viewReqDescription(row) {\r\n    const dialogRef = this.dialog.open(DisplayDataDialogComponent, {\r\n      data: {value: row.reqDesc}\r\n    });\r\n  }\r\n\r\n  onAddRequest() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.height = '250px';\r\n    dialogConfig.width = '600px';\r\n    const dialogRef = this.dialog.open(RequestDialogComponent, dialogConfig);\r\n\r\n    dialogRef.componentInstance.onAdd.subscribe((data) => {\r\n        this.comment = data;\r\n     });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      dialogRef.componentInstance.onAdd.unsubscribe();\r\n      console.log(result);\r\n      if(result){\r\n        this.testinglog = this.comment;\r\n        this.reqData.push({reqDesc: this.comment, status: 'open'});\r\n//        this.dataSource = new MatTableDataSource(this.reqData);\r\n        this.dataSource.data = this.reqData;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport{RequestData} from '../models/request-data';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestService{\r\n  \r\n  private requestsUrl = 'api/requests/';\r\n  private requestUrl = 'api/request/';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRequests(empId:number):Observable<RequestData[]>{\r\n    return this.http.get<RequestData[]>(this.requestsUrl+`${empId}`)\r\n    .pipe(\r\n      tap(result=>console.log(\"inside service\"+result)),\r\n      catchError(this.handleError('getRequest', []))\r\n    );\r\n  }\r\n\r\n  /**\r\n * Handle Http operation that failed.\r\n * Let the app continue.\r\n * @param operation - name of the operation that failed\r\n * @param result - optional value to return as the observable result\r\n */\r\nprivate handleError<T> (operation = 'operation', result?: T) {\r\n  return (error: any): Observable<T> => {\r\n\r\n    // TODO: send the error to remote logging infrastructure\r\n    console.error(error); // log to console instead\r\n\r\n    // TODO: better job of transforming error for user consumption\r\n    // this.log(`${operation} failed: ${error.message}`);\r\n\r\n    // Let the app keep running by returning an empty result.\r\n    return of(result as T);\r\n  };\r\n}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}