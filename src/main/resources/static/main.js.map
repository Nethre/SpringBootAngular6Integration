{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/base-view/base-view.component.css","webpack:///./src/app/base-view/base-view.component.html","webpack:///./src/app/base-view/base-view.component.ts","webpack:///./src/app/display-data-dialog/display-data-dialog.component.css","webpack:///./src/app/display-data-dialog/display-data-dialog.component.html","webpack:///./src/app/display-data-dialog/display-data-dialog.component.ts","webpack:///./src/app/employee-detail/employee-detail.component.css","webpack:///./src/app/employee-detail/employee-detail.component.html","webpack:///./src/app/employee-detail/employee-detail.component.ts","webpack:///./src/app/generic-dialog/generic-dialog.component.css","webpack:///./src/app/generic-dialog/generic-dialog.component.html","webpack:///./src/app/generic-dialog/generic-dialog.component.ts","webpack:///./src/app/manager-dashboard/manager-dashboard.component.css","webpack:///./src/app/manager-dashboard/manager-dashboard.component.html","webpack:///./src/app/manager-dashboard/manager-dashboard.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/request/request.component.css","webpack:///./src/app/request/request.component.html","webpack:///./src/app/request/request.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\r\nimport { BaseViewComponent } from './base-view/base-view.component';\r\nimport { RequestComponent } from './request/request.component';\r\nimport { ManagerDashboardComponent } from './manager-dashboard/manager-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',redirectTo:'dashboard',pathMatch:'full'},\r\n  {path:'empdetails',component:EmployeeDetailComponent},\r\n  {path:'dashboard',component:BaseViewComponent,\r\n  children:[\r\n    {path:'',redirectTo:'mgrdashboard',pathMatch:'full'},\r\n    {path:'mgrdashboard',component:ManagerDashboardComponent},    \r\n    {path:'request', component:RequestComponent},\r\n  ]\r\n  },\r\n  {path:'**',component:BaseViewComponent}\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'web-app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\r\nimport { BaseViewComponent } from './base-view/base-view.component';\r\nimport { RequestComponent } from './request/request.component';\r\nimport { ManagerDashboardComponent } from './manager-dashboard/manager-dashboard.component';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\nimport { MaterialModules } from './material';\r\n\r\nimport 'hammerjs';\r\nimport { GenericDialogComponent } from './generic-dialog/generic-dialog.component';\r\nimport { DisplayDataDialogComponent } from './display-data-dialog/display-data-dialog.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeeDetailComponent,\r\n    BaseViewComponent,\r\n    RequestComponent,\r\n    ManagerDashboardComponent,\r\n    GenericDialogComponent,\r\n    DisplayDataDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MaterialModules,\r\n    ReactiveFormsModule\r\n  ],\r\n  entryComponents:[GenericDialogComponent,DisplayDataDialogComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  base-view works!\\r\\n</p>\\r\\n<app-employee-detail></app-employee-detail>\\r\\n<mat-divider></mat-divider>\\r\\n<a routerLink=\\\"./mgrdashboard\\\">Manager Dashboard</a>\\r\\n<a routerLink=\\\"./request\\\">Request</a>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-base-view',\r\n  templateUrl: './base-view.component.html',\r\n  styleUrls: ['./base-view.component.css']\r\n})\r\nexport class BaseViewComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Request Description</h1>\\r\\n<div mat-dialog-content>\\r\\n  {{data.value}}\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">  \\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">OK</button>\\r\\n</div>\"","import { Component, OnInit, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material';\r\n@Component({\r\n  selector: 'app-display-data-dialog',\r\n  templateUrl: './display-data-dialog.component.html',\r\n  styleUrls: ['./display-data-dialog.component.css']\r\n})\r\nexport class DisplayDataDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\r\\n  employee-detail works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-employee-detail',\r\n  templateUrl: './employee-detail.component.html',\r\n  styleUrls: ['./employee-detail.component.css']\r\n})\r\nexport class EmployeeDetailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n    max-width: 100%;\\r\\n    max-height: 100%;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    border-radius: 0;\\r\\n}\"","module.exports = \"<h2 mat-dialog-title>Discussion Comment</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  <mat-form-field>\\r\\n    <textarea matInput placeholder=\\\"Please enter here...\\\" maxlength=\\\"500\\\" [formControl]=\\\"comment\\\" required></textarea>\\r\\n    <mat-error *ngIf=\\\"comment.invalid\\\">{{getErrorMessage()}}</mat-error>\\r\\n  </mat-form-field>\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions  align=\\\"end\\\">\\r\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">Cancel</button>\\r\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" [disabled]=\\\"comment.invalid\\\" (click)=\\\"onSubmit()\\\">Submit</button>\\r\\n</mat-dialog-actions>\"","import { Component, OnInit,Inject,EventEmitter,Output } from '@angular/core';\r\nimport {MatDialogRef} from '@angular/material';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-generic-dialog',\r\n  templateUrl: './generic-dialog.component.html',\r\n  styleUrls: ['./generic-dialog.component.css']\r\n})\r\nexport class GenericDialogComponent implements OnInit {\r\n\r\n  @Output('onAdd')\r\n  onAdd = new EventEmitter<any>();\r\n  constructor(public dialogRef : MatDialogRef<GenericDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  comment = new FormControl('', [Validators.required]);\r\n\r\n  getErrorMessage() {\r\n    return this.comment.hasError('required') ? 'You must enter a value':'';\r\n  }\r\n\r\n  // onClose(): void {\r\n  //   this.dialogRef.close('done');\r\n  // }\r\n\r\n  onSubmit():void{\r\n    this.dialogRef.close('true');\r\n    this.onAdd.emit(this.comment.value);\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  font-size: 14px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntd, th {\\r\\n  width: 25%;\\r\\n}\\r\\n\\r\\n.manager-icons{\\r\\n  padding: 0px 14px;\\r\\n  white-space: nowrap;\\r\\n}\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <!-- ID Column -->\\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Request Description Column -->\\r\\n    <ng-container matColumnDef=\\\"reqDesc\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Request Description </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"><button mat-button color=\\\"primary\\\" (click)=\\\"viewReqDescription(row)\\\"> {{row.reqDesc | slice:0:25}} </button></td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Raised By Column -->\\r\\n    <ng-container matColumnDef=\\\"empId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Raised By </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.empId}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Staus Column -->\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Staus </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}} </td>\\r\\n    </ng-container>\\r\\n    <!-- Action Column -->\\r\\n    <ng-container matColumnDef=\\\"action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\" class=\\\"manager-icons\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"onAccept(row)\\\" [disabled]=\\\"!(row.status==='open' || row.status==='pending')\\\">\\r\\n          <mat-icon >thumb_up_alt</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"onReject(row)\\\" [disabled]=\\\"!(row.status==='open' || row.status==='pending')\\\">\\r\\n          <mat-icon >thumb_down_alt</mat-icon>\\r\\n        </button>\\r\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"onMeet(row)\\\" [disabled]=\\\"!(row.status==='open')\\\">\\r\\n          <mat-icon >people</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\n\r\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {MatDialog} from '@angular/material';\r\n\r\nimport{GenericDialogComponent} from '../generic-dialog/generic-dialog.component';\r\nimport{DisplayDataDialogComponent} from '../display-data-dialog/display-data-dialog.component';\r\n\r\nexport interface RequestData {\r\n  id: string;\r\n  reqDesc: string;\r\n  empId: string;\r\n  status: string;\r\n}\r\n\r\n/** Constants used to fill up our data base. */\r\nlet reqData : RequestData[];\r\n\r\n@Component({\r\n  selector: 'app-manager-dashboard',\r\n  templateUrl: './manager-dashboard.component.html',\r\n  styleUrls: ['./manager-dashboard.component.css']\r\n})\r\nexport class ManagerDashboardComponent implements OnInit {\r\n  comment:string;\r\n  displayedColumns: string[] = ['id', 'reqDesc', 'empId', 'status','action'];\r\n  dataSource: MatTableDataSource<RequestData>;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    // Create 100 users\r\n    reqData = [{id:'1',reqDesc:'Seat change request',empId:'121',status:'open'},\r\n              {id:'2',reqDesc:'PC not working.',empId:'124',status:'closed'},\r\n              {id:'3',reqDesc:'Project discussion.',empId:'123',status:'closed'},\r\n              {id:'4',reqDesc:'Team outing tour.',empId:'125',status:'pending'},\r\n              {id:'5',reqDesc:'Appraisal discussion',empId:'129',status:'Closed'},\r\n              {id:'6',reqDesc:'Location Change request',empId:'130',status:'open'},\r\n              {id:'7',reqDesc:'Work from home request',empId:'131',status:'Rejected'}\r\n    ];\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource(reqData);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  onSubmit(request:RequestData,action:string){\r\n    const dialogRef = this.dialog.open(GenericDialogComponent,{\r\n      height: '250px',\r\n      width: '600px',\r\n    });\r\n    dialogRef.componentInstance.onAdd.subscribe((data) => {\r\n        this.comment = data;\r\n      });\r\n\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n        dialogRef.componentInstance.onAdd.unsubscribe(); \r\n        if(result){\r\n        console.log(this.comment);\r\n        request.status=action;\r\n        }\r\n    });\r\n  }\r\n\r\n  onAccept(request:RequestData){\r\n    this.onSubmit(request,\"approved\");\r\n  }\r\n\r\n  onReject(request:RequestData){\r\n    this.onSubmit(request,\"rejected\");\r\n  }\r\n\r\n  onMeet(request:RequestData){\r\n    this.onSubmit(request,\"pending\");\r\n  }\r\n\r\n  viewReqDescription(row){\r\n    const dialogRef = this.dialog.open(DisplayDataDialogComponent,{\r\n      data:{value:row.reqDesc}\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport{MatDividerModule,MatTableModule,MatFormFieldModule,MatIconModule,MatDialogModule,\r\n    MatSortModule,MatPaginatorModule,MatSelectModule,MatOptionModule,MatTooltipModule,\r\n    MatButtonModule,MatInputModule } from '@angular/material';\r\n  import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n  @NgModule({\r\n    imports: [\r\n      BrowserAnimationsModule,\r\n      MatDividerModule,\r\n      MatTableModule,\r\n      MatFormFieldModule,\r\n      MatSortModule,\r\n      MatPaginatorModule,\r\n      MatSelectModule,\r\n      MatOptionModule,\r\n      MatTooltipModule,\r\n      MatButtonModule,\r\n      MatIconModule,\r\n      MatDialogModule,\r\n      MatInputModule\r\n    ],\r\n    exports:[BrowserAnimationsModule,\r\n        MatDividerModule,\r\n        MatTableModule,\r\n        MatFormFieldModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatTooltipModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatInputModule\r\n      ]\r\n  })\r\nexport class MaterialModules{\r\n\r\n}","module.exports = \"\"","module.exports = \"<p>\\r\\n  request works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-request',\r\n  templateUrl: './request.component.html',\r\n  styleUrls: ['./request.component.css']\r\n})\r\nexport class RequestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}